Skipped because of time but essential:
#Access Control
#Extensions
#Automatic Reference Counting
    #Resolving Strong Reference Cycles
        #Weak References
        #Unowned References
        #Capture List

#--------------------------------------------------------------------------------
Skipped and not that essential:
#Computed variable
#Variable observer
#Using closure to declare variable or constant
#Set
#Nested Types (type inside type)
#Assertion
#Precondition
#Unicode Representations of Strings
#Autoclosures
Class and structure
    lazy stored property
    Subscripts

#--------------------------------------------------------------------------------
Skipped because too powerful (used for making framework)
#Overloading existing operator
#Custom Operators
#Generics

#--------------------------------------------------------------------------------
Skipped because Swift is on steroid
    Switch statement is on steroid
    Enumeration is like C enum except it's on steroid
    Structure is like C struct except it's on steroid
    Protocol is Interface on steroid
#Switch statement
    #with range
    #pattern matching with tuples
    #value binding in pattern matching
    #value binding with condition
#Using Enumeration as Tagged Union
#Recursive Enumeration
#Enumeration and Structure
  Just like structure, enumeration can have:
    Initializer
    Instance Property and Instance Method
    Type Property and Type Method
    Subscripts
#Protocol Composition
#Protocol Extensions
    for default behavior or value (Protocol-Oriented Programming)
#Optional protocol requirements