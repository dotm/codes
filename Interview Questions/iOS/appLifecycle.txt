Although the app delegate is the primary place where you handle life cycle events, it is not the only place.
For most events, UIKit also generates notifications that any object can observe (see UIApplication class docs).

# App States
Not Running
    Either the application has not started yet or
    was running and has been terminated by the system.
Inactive
    An application is running in the Foreground but is not receiving any events.
    This could happen in case a Call or Message is received.
    An application could also stay in this state while in transition to a different state.
    In this State, we can not interact with app's UI.
Active
    An application is running in the Foreground and receiving the events.
    This is the normal mode for the Foreground apps.
    The only way to go to or from the Active state is through the Inactive state.
    User normally interacts with UI, and can see the response/result for user actions.
Background
    An application is running in the background and executing the code.
    Freshly launching apps directly enter into In-Active state and then to Active state.
    Apps that are suspended, will come back to this background state,
    and then transition to In-Active → Active states.
    An application being launched directly into the background enters this state
    instead of the inactive state.
Suspended
    An application is in the background but is not executing the code.
    The system moves the application to this state automatically and does not notify.
    In case of low memory, the system may purge suspended application
    without notice to make free space for the foreground application.
    Usually after 5 secs spent in the background, apps will transition to Suspend state,
    but we can extend the time if app needs.

# Manage State Transitions
Launch time:
application(_:willFinishLaunchingWithOptions:)
application(_:didFinishLaunchingWithOptions:)

Transitioning to the foreground:
applicationDidBecomeActive(_:)

Transitioning to the background:
applicationDidEnterBackground(_:)

Transitioning to the inactive state:
applicationWillResignActive(_:) (Called when leaving the foreground state.)
applicationWillEnterForeground(_:) (Called when transitioning out of the background state.)

Termination:
applicationWillTerminate(_:)
(Called only when the app is running. This method is not called if the app is suspended.)

# Manage Behavioral Events
Memory warnings
    applicationDidReceiveMemoryWarning(_:)
  Reduce the amount of memory your app uses.

Time changes
    applicationSignificantTimeChange(_:)
  Update time-sensitive features of your app.

Protected data becomes available/unavailable
    applicationProtectedDataWillBecomeUnavailable(_:)
    applicationProtectedDataDidBecomeAvailable(_:)
  Manage files when the user locks or unlocks the device.

State restoration
  Restore your app’s UI to its previous state,
  giving the appearance that your app never stopped running.

Handoff tasks
  Continue tasks started on another device.

Open URLs
  Receive and open URLs sent to your app.

Inter-app communication
  Receive data from a paired watchOS app.

File downloads
  Receive files that your app downloaded using a URLSession object.