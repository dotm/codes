<script src="jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="stylesheet.css">

;(function ($, window, document, undefined) {
	'use strict';
	// Code goes here...
})(jQuery, window, document);

function a (x){
 if(x === undefined){return "Getter";}
 if(typeof x === "string"){ return "Setter set to "+x; }
 else{return "Please enter a string" }
}

#Append Windows PATH
search PATH from Windows

#Include HTML inside HTML using jQuery
<html> 
  <head> 
    <script src="jquery.js"></script> 
    <script> 
    $(function(){
      $("#includedContent").load("b.html"); 
    });
    </script> 
  </head> 
  <body> 
     <div id="includedContent"></div>
  </body> 
</html>

#CSS basic visible element
width: 100px;
height: 100px;
background-color: aqua;
border: 1px black solid;
box-sizing: border-box;

#Compile less
lessc a.less a.css

#recommit git
git add .
git commit --amend

#Github Pages project page
git checkout --orphan gh-pages
git commit -am"initial commit"
git push origin gh-pages

#Parsing Ajax html
var a=$.get("http://dotm.github.io/")
var el = document.createElement( 'html' );
el.innerHTML = a.responseText

#Create canvas
var canvas = document.createElement("canvas")
canvas.width = canvas.height = 400
canvas.style = "border:1px solid #000;"
var c = canvas.getContext('2d');
document.getElementsByTagName("body")[0].appendChild(canvas)

#Set up git to pull and push all branches
git push --all origin -u

#Make an existing Git branch track a remote branch
Given a branch foo and a remote upstream:
git branch -u upstream/foo
Or, if local branch foo is not the current branch:
git branch -u upstream/foo foo

#----------------------------------------------------------------------------------------
#Pug auto render to html with same filename in the same directory

run lala.js below from node and you'll get lala.html from lala.pug
!lala.pug
!lala.js
  const pug = require('pug')
    , path = require('path')
    , fs = require('fs')
    , scriptName = path.basename(module.filename, path.extname(module.filename))
    , file = `${__dirname}\\${scriptName}.pug`
    , str = require('fs').readFileSync(file, 'utf8')
    , compiledFunction = pug.compile(str, { filename: file, pretty: true });

  // Render a set of data with the "locals" data object
  let result = compiledFunction({});
  // Write to html
  let newHTML = scriptName + ".html"
  fs.writeFileSync(newHTML, result)
  // Report success
  console.log(`${newHTML} successfully rendered from ${file}. Click Alt+F4 to exit cmd. `)